<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="myBtn" TargetType="Button" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="5" BorderThickness="2" BorderBrush="White">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DD53825E" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#E8E8E8" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="myRoundBtn" TargetType="Button" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="9999" BorderThickness="2" BorderBrush="White">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DD53825E" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#E8E8E8" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="myDarkRoundBtn" TargetType="Button" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="9999" BorderThickness="2" BorderBrush="#FF434948">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FF434948" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#FF434948" />
                <Setter Property="Foreground" Value="#FF53825E" />
            </Trigger>
        </Style.Triggers>

    </Style>
    
    
    <Style x:Key="Title" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF53825E" />
        <Setter Property="FontSize" Value="30px" />
        <Setter Property="Padding" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="regularFont" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    <Style x:Key="myTxt" TargetType="TextBox">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    <Style x:Key="darkFont" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    <Style x:Key="greenFont" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF53825E" />
        <Setter Property="TextDecorations" Value="OverLine" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    <Style x:Key="myFont" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    
    <Style x:Key="containTextBox" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="Margin" Value="15" />
        <Setter Property="BorderBrush" Value="#FF434948" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="myTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="FontSize" Value="20px" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5 0 10 0" />
    </Style>

    <Style x:Key="myPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="FontSize" Value="20px" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5 0 10 0" />
    </Style>
    <ImageBrush x:Key="FocusMinimize" ImageSource="../asset/icons/minimize-hover.png" />
    <ImageBrush x:Key="FocusClose" ImageSource="../asset/icons/close-hover.png" />
    <ImageBrush x:Key="FocusClose2" ImageSource="../asset/icons/closebtn.png" />
    <Style x:Key="minimizeBtn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusMinimize}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusMinimize}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="closeBtn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusClose}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusClose}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="closeBtn2" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusClose2}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusClose2}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFBAD373" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="20 15" />
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF53825E" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF53825E" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="YellowButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFE7D87B" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="20 15" />
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFDCAA5C" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFDCAA5C" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WhiteButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="white" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="20 15" />
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="white" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="white" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RedButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFCE855D" />
        <Setter Property="Foreground" Value="#FF434948" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="20 15" />
        <Setter Property="TextElement.FontFamily" Value="/Qualitea;component/fonts/#Montserrat Medium" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFB74B39" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFB74B39" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
</ResourceDictionary>