<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TextFont">
        <Setter Property="TextBlock.FontFamily" Value="/GUI;component/fonts/#Montserrat Medium" />
    </Style>
    <Style x:Key="titleText" TargetType="TextBlock" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter  Property="Foreground" Value="#FFF"/>
    </Style>

    <Style x:Key="normalText" TargetType="TextBlock" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter  Property="Foreground" Value="#66FFFFFF"/>
    </Style>

    
    <Style x:Key="button" TargetType="Button" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Foreground" Value="#FDFEFE"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="20" BorderThickness="1" BorderBrush="White" Padding="15">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DD53825E"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#E8E8E8"/>
                <Setter Property="Foreground" Value="DimGray"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="textHint" TargetType="TextBlock" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Foreground" Value="#ACB0AF"/>
        <Setter Property= "Margin" Value="12 0 0 0"/>
    </Style>

    <Style x:Key="TextBox" TargetType="Control" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Foreground" Value="#878787"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="SignInButton" TargetType="Button" BasedOn="{StaticResource TextFont}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="0 20 0 0"/>
        <Setter Property="Foreground" Value="#FDFEFE"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="#DD53825E" Padding="15" Margin="0 20 0 0">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#6a994e"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6a994e"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#FF88B474"/>
                <Setter Property="Foreground" Value="#555777"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EmployeeCheck" TargetType="Border" BasedOn="{StaticResource TextFont}">
        <Setter Property="Margin" Value="0 20 0 0"/>
    </Style>
    <Style x:Key="regularFont" TargetType="TextBlock">
        <Setter Property="TextElement.FontFamily" Value="/GUI;component/fonts/#Montserrat Medium" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    <ImageBrush x:Key="FocusMinimize" ImageSource="asset/icons/minimize-hover.png" />
    <ImageBrush x:Key="FocusClose" ImageSource="asset/icons/close-hover.png" />
    <Style x:Key="minimizeBtn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusMinimize}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusMinimize}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="closeBtn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusClose}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FocusClose}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="myScrollView" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle  x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
            <ScrollBar Background="Transparent" BorderBrush="Transparent" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" />
            <ScrollBar Background="Transparent" BorderBrush="Transparent" x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
        </Grid>
    </ControlTemplate>
</ResourceDictionary>